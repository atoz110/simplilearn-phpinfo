https://docs.docker.com/engine/reference/builder/

git clone https://github.com/academiaonline/simplilearn-phpinfo
cd simplilearn-phpinfo/
git pull
git checkout dca-2021-05
.dockerignore
#**/*
#!src
#https://github.com/academiaonline/simplilearn-phpinfo/blob/dca-2021-05/.dockerignore
git pull
docker build --tag simplilearn-phpinfo:test .

docker images | grep simplilearn-phpinfo.*test
docker history simplilearn-phpinfo:test 
docker history simplilearn-phpinfo:test --no-trunc

#knes for Alpne
https://github.com/alpinelinux/docker-alpine/blob/37579d92b9faa70398240431bc46720242faa5e5/x86_64/Dockerfile

docker run --detach --name test --rm simplilearn-phpinfo:test 

sudo ls /var/lib/docker/containers/337360d74cabb5159630f2364ccd0adc1d150ba22745a9f963fcf81b57457fd8 -lh

(container data)
ls -l /var/lib/docker -d

cat /etc/fstab (seperate partition for container data)
LABEL=docker            /var/lib/docker ext4    defaults        0 0

sudo tar zcf docker-backup.tgz /var/lib/docker (backup container data)

how do you check what containers are running?
from Sebastian Colomar (Faculty) to All Participants:
 docker ps | grep test
from Sebastian Colomar (Faculty) to All Participants:
docker kill test
from Sebastian Colomar (Faculty) to All Participants:
docker ps --all

docker container prune --force

docker logs test
from Thomas King to All Participants:
To sum up: We used an existing index.php and used a Dockerfile to create an Alpine-based container with that index.php file along with the php packages. We built the container from the Dockerfile and ran it. 
from Sebastian Colomar (Faculty) to All Participants:
docker top test

To create the docker group and add your user:

Create the docker group.
 sudo groupadd docker
Add your user to the docker group.
 sudo usermod -aG docker $USER
 
Confired enabled
systemctl is-enabled docker
from Sebastian Colomar (Faculty) to All Participants:
sudo systemctl enable docker
from Sebastian Colomar (Faculty) to All Participants:
sudo systemctl enable --now docker

from Sebastian Colomar (Faculty) to All Participants:
docker network create thomas
from Sebastian Colomar (Faculty) to All Participants:
docker run --detach --name nginx-thomas --network thomas --rm nginx:alpine


#Add volume

docker volume create data
docker run --detach --env MYSQL_ROOT_PASSWORD+sebastian1234 --name test --volume data:/var/lib/mysql mysql
sudo ls /var/lib/docker/volumes/data/_data -ld

Like - mount /var/lib/mysql /var/lib/docker/volumes/data

sudo ls /var/lib/docker/containers -l
from Sebastian Colomar (Faculty) to All Participants:
sudo ls /var/lib/docker/image -ld
from Sebastian Colomar (Faculty) to All Participants:
sudo ls /var/lib/docker/volumes -l
from Sebastian Colomar (Faculty) to All Participants:
sudo ls /var/lib/docker/volumes/data/_data -l

 docker history registry:2 
from Sebastian Colomar (Faculty) to All Participants:
docker export --output registry.tar registry
from Sebastian Colomar (Faculty) to All Participants:
docker import registry.tar registry:flat



